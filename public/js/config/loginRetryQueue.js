angular.module('loginRetryQueue',[]).factory('loginRetryQueue',['$q','$log','$location',function($q,$log,$location){var retryQueue=[];var service={onItemAddedCallbacks:[],hasMore:function(){return retryQueue.length>0;},push:function(retryItem){retryQueue.push(retryItem);angular.forEach(service.onItemAddedCallbacks,function(cb){try{cb(retryItem);}catch(e){$log.error('securityRetryQueue.push(retryItem): callback threw an error'+e);}});},pushRetryFn:function(reason,retryFn){if(arguments.length===1){retryFn=reason;reason=undefined;}var deferred=$q.defer();var retryItem={reason:reason,retry:function(){$q.when(retryFn()).then(function(value){deferred.resolve(value);},function(value){deferred.reject(value);});},cancel:function(){deferred.reject();}};service.push(retryItem);return deferred.promise;},retryReason:function(){return service.hasMore()&&retryQueue[0].reason;},cancelAll:function(){while(service.hasMore()){retryQueue.shift().cancel();}if($location.absUrl().indexOf('/sns/')>0){location.href='/';}},retryAll:function(){while(service.hasMore()){retryQueue.shift().retry();}}};return service;}]);